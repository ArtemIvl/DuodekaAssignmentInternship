{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGlobalState = {\n  todos: [{\n    id: null,\n    title: null,\n    competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = /*#__PURE__*/React.createContext();\nconst GlobalStateProvider = function (_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState(initialGlobalState !== null && initialGlobalState !== void 0 ? initialGlobalState : {});\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\n_s(GlobalStateProvider, \"vsN1OYyNhdtEbC3EgeiArcWWJPg=\");\n_c = GlobalStateProvider;\nconst useGlobalState = () => {\n  _s2();\n  return React.useContext(GlobalState);\n};\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nwindow.GlobalState = GlobalState;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: /*#__PURE__*/_jsxDEV(GlobalStateProvider, {\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStateProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","TodoList","initialGlobalState","todos","id","title","competed","count","GlobalState","createContext","GlobalStateProvider","children","state","setState","setGlobalState","data","newState","Object","keys","forEach","key","set","useGlobalState","useContext","window","App"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport TodoList from './components/TodoList';\n\nconst initialGlobalState = {\n  todos: [{\n    id: null, title: null, competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext();\n\nconst GlobalStateProvider = function ({ children }) {\n  const [state, setState] = useState(initialGlobalState ?? {});\n\n  const setGlobalState = useCallback(\n    (data = {}) => {\n      const newState = { ...state };\n\n      // Loop over the data items by key, only updating those which have changed\n      Object.keys(data).forEach((key) => {\n        newState[key] = data[key];\n      });\n\n      // Update the state with the new State\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n\n  return (\n    // Pass the current value of GlobalState, based on this components' State, down\n    <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\nconst useGlobalState = () => React.useContext(GlobalState);\nwindow.GlobalState = GlobalState;\n\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n    <GlobalStateProvider>\n      <TodoList />\n      </GlobalStateProvider>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;IACNC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE;EACnC,CAAC,CAAC;EACFC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAa,EAAE;AAEzC,MAAMC,mBAAmB,GAAG,gBAAwB;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAACI,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAI,CAAC,CAAC,CAAC;EAE5D,MAAMY,cAAc,GAAGd,WAAW,CAChC,YAAe;IAAA,IAAde,IAAI,uEAAG,CAAC,CAAC;IACR,MAAMC,QAAQ,GAAG;MAAE,GAAGJ;IAAM,CAAC;;IAE7B;IACAK,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;MACjCJ,QAAQ,CAACI,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAP,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC,EACD,CAACJ,KAAK,EAAEC,QAAQ,CAAC,CAClB;EAEDd,SAAS,CAAC,MAAM;IACdS,WAAW,CAACa,GAAG,GAAGP,cAAc;EAClC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEF,KAAM;MAAA,UAAED;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAwB;AAEzE,CAAC;;AAED;AAAA,GA5BMD,mBAAmB;AAAA,KAAnBA,mBAAmB;AA6BzB,MAAMY,cAAc,GAAG;EAAA;EAAA,OAAMzB,KAAK,CAAC0B,UAAU,CAACf,WAAW,CAAC;AAAA;AAAC,IAArDc,cAAc;AACpBE,MAAM,CAAChB,WAAW,GAAGA,WAAW;AAGhC,SAASiB,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACzB,QAAC,mBAAmB;MAAA,uBAClB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACU;IAAA;IAAA;IAAA;EAAA,QAClB;AAEV;AAAC,MARQA,GAAG;AAUZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
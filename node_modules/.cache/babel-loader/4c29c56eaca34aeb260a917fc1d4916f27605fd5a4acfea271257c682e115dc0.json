{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGlobalState = {\n  todos: [{\n    id: null,\n    title: null,\n    competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = /*#__PURE__*/React.createContext();\nconst GlobalStateProvider = function (_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState(initialGlobalState !== null && initialGlobalState !== void 0 ? initialGlobalState : {});\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\n_s(GlobalStateProvider, \"vsN1OYyNhdtEbC3EgeiArcWWJPg=\");\n_c = GlobalStateProvider;\nconst useGlobalState = () => {\n  _s2();\n  return React.useContext(GlobalState);\n};\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nwindow.GlobalState = GlobalState;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(GlobalStateProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this));\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"GlobalStateProvider\");","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","App","initialGlobalState","todos","id","title","competed","count","GlobalState","createContext","GlobalStateProvider","children","state","setState","useState","setGlobalState","useCallback","data","newState","Object","keys","forEach","key","useEffect","set","useGlobalState","useContext","window","root","createRoot","document","getElementById","render"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nconst initialGlobalState = {\n  todos: [{\n    id: null, title: null, competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext();\n\nconst GlobalStateProvider = function ({ children }) {\n  const [state, setState] = useState(initialGlobalState ?? {});\n\n  const setGlobalState = useCallback(\n    (data = {}) => {\n      const newState = { ...state };\n\n      // Loop over the data items by key, only updating those which have changed\n      Object.keys(data).forEach((key) => {\n        newState[key] = data[key];\n      });\n\n      // Update the state with the new State\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n\n  return (\n    // Pass the current value of GlobalState, based on this components' State, down\n    <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\nconst useGlobalState = () => React.useContext(GlobalState);\nwindow.GlobalState = GlobalState;\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n    <App />\n    </GlobalStateProvider>\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,GAAG,MAAM,OAAO;AAAC;AAExB,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;IACNC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE;EACnC,CAAC,CAAC;EACFC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,gBAAGV,KAAK,CAACW,aAAa,EAAE;AAEzC,MAAMC,mBAAmB,GAAG,gBAAwB;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACZ,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAI,CAAC,CAAC,CAAC;EAE5D,MAAMa,cAAc,GAAGC,WAAW,CAChC,YAAe;IAAA,IAAdC,IAAI,uEAAG,CAAC,CAAC;IACR,MAAMC,QAAQ,GAAG;MAAE,GAAGN;IAAM,CAAC;;IAE7B;IACAO,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;MACjCJ,QAAQ,CAACI,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAT,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC,EACD,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAClB;EAEDU,SAAS,CAAC,MAAM;IACdf,WAAW,CAACgB,GAAG,GAAGT,cAAc;EAClC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEH,KAAM;MAAA,UAAED;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAwB;AAEzE,CAAC;;AAED;AAAA,GA5BMD,mBAAmB;AAAA,KAAnBA,mBAAmB;AA6BzB,MAAMe,cAAc,GAAG;EAAA;EAAA,OAAM3B,KAAK,CAAC4B,UAAU,CAAClB,WAAW,CAAC;AAAA;AAAC,IAArDiB,cAAc;AACpBE,MAAM,CAACnB,WAAW,GAAGA,WAAW;AAEhC,MAAMoB,IAAI,GAAG7B,QAAQ,CAAC8B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,mBAAmB;IAAA,uBACpB,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA;AACe;EAAA;EAAA;EAAA;AAAA,QACL,CACpB;AACDhC,eAAe,EAAE;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
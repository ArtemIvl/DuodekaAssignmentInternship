{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AllTodos from './AllTodos';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst globalState = [{\n  id: null,\n  title: null,\n  completed: false\n}];\nconst globalStateContext = /*#__PURE__*/React.createContext(globalState);\nconst useGlobalState = () => {\n  _s();\n  return React.useContext(GlobalState);\n};\n\n// Create a Context for the (global) State\n_s(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst GlobalState = /*#__PURE__*/React.createContext();\nconst GlobalStateProvider = function (_ref) {\n  _s2();\n  var _initialGlobalState;\n  let {\n    TodoList\n  } = _ref;\n  const [state, setState] = useState((_initialGlobalState = initialGlobalState) !== null && _initialGlobalState !== void 0 ? _initialGlobalState : {});\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: TodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s2(GlobalStateProvider, \"vsN1OYyNhdtEbC3EgeiArcWWJPg=\");\n_c = GlobalStateProvider;\nfunction TodoList() {\n  _s3();\n  const {\n    todos\n  } = useGlobalState();\n\n  //const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState([]);\n  var id = 0;\n  const addTodo = () => {\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([...todos, {\n      id: id + 1,\n      title: title,\n      completed: false\n    }]);\n    setTitle('');\n  };\n  const deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    // setTodos(removeArray);\n  };\n\n  const editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text)) {\n      return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalStateProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"TodoApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addTodo(),\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllTodos, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s3(TodoList, \"QEYeAfVJjWV7XLSULOJ2PyTpaRk=\", false, function () {\n  return [useGlobalState];\n});\n_c2 = TodoList;\nexport default TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStateProvider\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AllTodos","globalState","id","title","completed","globalStateContext","createContext","useGlobalState","useContext","GlobalState","GlobalStateProvider","TodoList","state","setState","initialGlobalState","setGlobalState","data","newState","Object","keys","forEach","key","set","todos","setTitle","addTodo","deleteTodo","removeArray","filter","todo","editTodo","updatedValue","text","test","event","target","value"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport AllTodos from './AllTodos';\nimport './TodoList.css'\n\nconst globalState = [{\n    id: null,\n    title: null,\n    completed: false\n}];\n\nconst globalStateContext = React.createContext(globalState);\n\nconst useGlobalState = () => React.useContext(GlobalState);\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext();\n\nconst GlobalStateProvider = function ({ TodoList }) {\n  const [state, setState] = useState(initialGlobalState ?? {});\n\n  const setGlobalState = useCallback(\n    (data = {}) => {\n      const newState = { ...state };\n\n      // Loop over the data items by key, only updating those which have changed\n      Object.keys(data).forEach((key) => {\n        newState[key] = data[key];\n      });\n\n      // Update the state with the new State\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n\n  return (\n    // Pass the current value of GlobalState, based on this components' State, down\n    <GlobalState.Provider value={state}>{TodoList}</GlobalState.Provider>\n  );\n};\n\n\nfunction TodoList() {\n\nconst { todos } = useGlobalState();\n\n//const [todos, setTodos] = useState([]);\nconst [title, setTitle] = useState([]);\nvar id = 0;\n\nconst addTodo = () => {\n\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([\n        ...todos,\n        {\n            id: id + 1,\n            title: title,\n            completed: false\n        }\n    ]);\n    setTitle(''); \n}\n\nconst deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id)\n   // setTodos(removeArray);\n}\n\nconst editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n    {\n        return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n}\n\n  return (\n    <GlobalStateProvider>\n    <div className='todo-list'>\n        <div className='header'>TodoApp</div>\n        <input\n        type='text'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        />\n        <button onClick={() => addTodo()}>\n            Add Todo\n        </button>\n        <AllTodos todos={todos} />\n    </div>\n    </GlobalStateProvider>\n  )\n}\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
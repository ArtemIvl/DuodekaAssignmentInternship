{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AllTodos from './AllTodos';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst globalState = [{\n  id: null,\n  title: null,\n  completed: false\n}];\nconst globalStateContext = /*#__PURE__*/React.createContext(globalState);\nfunction TodoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState([]);\n  var id = 0;\n  const addTodo = () => {\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    setTodos([...todos, {\n      id: id + 1,\n      title: title,\n      completed: false\n    }]);\n    setTitle('');\n  };\n  const deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    // setTodos(removeArray);\n  };\n\n  const editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text)) {\n      return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(globalStateContext.Provider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"TodoApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addTodo(),\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllTodos, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"F+zU2rsnGGc6l6fdF9W0vlF7Jls=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AllTodos","globalState","id","title","completed","globalStateContext","createContext","TodoList","todos","setTodos","setTitle","addTodo","deleteTodo","removeArray","filter","todo","editTodo","updatedValue","text","test","event","target","value"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport AllTodos from './AllTodos';\nimport './TodoList.css'\n\nconst globalState = [{\n    id: null,\n    title: null,\n    completed: false\n}];\n\nconst globalStateContext = React.createContext(globalState);\n\nfunction TodoList() {\n\nconst [todos, setTodos] = useState([]);\nconst [title, setTitle] = useState([]);\nvar id = 0;\n\nconst addTodo = () => {\n\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    setTodos([\n        ...todos,\n        {\n            id: id + 1,\n            title: title,\n            completed: false\n        }\n    ]);\n    setTitle(''); \n}\n\nconst deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id)\n   // setTodos(removeArray);\n}\n\nconst editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n    {\n        return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n}\n\n  return (\n    <globalStateContext.Provider>\n    <div className='todo-list'>\n        <div className='header'>TodoApp</div>\n        <input\n        type='text'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        />\n        <button onClick={() => addTodo()}>\n            Add Todo\n        </button>\n        <AllTodos todos={todos} />\n    </div>\n    </globalStateContext.Provider>\n  )\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AAAA;AAEvB,MAAMC,WAAW,GAAG,CAAC;EACjBC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACf,CAAC,CAAC;AAEF,MAAMC,kBAAkB,gBAAGT,KAAK,CAACU,aAAa,CAACL,WAAW,CAAC;AAE3D,SAASM,QAAQ,GAAG;EAAA;EAEpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,KAAK,EAAEO,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIK,EAAE,GAAG,CAAC;EAEV,MAAMS,OAAO,GAAG,MAAM;IAElB;IACA;IACA;IACA;;IAEAF,QAAQ,CAAC,CACL,GAAGD,KAAK,EACR;MACIN,EAAE,EAAEA,EAAE,GAAG,CAAC;MACVC,KAAK,EAAEA,KAAK;MACZC,SAAS,EAAE;IACf,CAAC,CACJ,CAAC;IACFM,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAME,UAAU,GAAGV,EAAE,IAAI;IACrB,MAAMW,WAAW,GAAG,CAAC,GAAGL,KAAK,CAAC,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKA,EAAE,CAAC;IAC9D;EACH,CAAC;;EAED,MAAMc,QAAQ,GAAG,CAACd,EAAE,EAAEe,YAAY,KAAK;IACnC,IAAI,CAACA,YAAY,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,YAAY,CAACC,IAAI,CAAC,EACzD;MACI;IACJ;;IAEA;EACJ,CAAC;;EAEC,oBACE,QAAC,kBAAkB,CAAC,QAAQ;IAAA,uBAC5B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAK,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACrC;QACA,IAAI,EAAC,MAAM;QACX,KAAK,EAAEf,KAAM;QACb,QAAQ,EAAEiB,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C,eACF;QAAQ,OAAO,EAAE,MAAMX,OAAO,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExB,eACT,QAAC,QAAQ;QAAC,KAAK,EAAEH;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACwB;AAElC;AAAC,GAtDQD,QAAQ;AAAA,KAARA,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
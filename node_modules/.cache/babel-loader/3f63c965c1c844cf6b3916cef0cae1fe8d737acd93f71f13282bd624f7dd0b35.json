{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Documents/GitHub/DuodekaAssignment/src/Store.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  todos: [{\n    id: 0,\n    title: \"first\",\n    completed: false\n  }]\n};\n\n//export const Context = React.createContext();\nexport const GlobalState = /*#__PURE__*/React.createContext();\nconst GlobalStateProvider = function (_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState(initialState !== null && initialState !== void 0 ? initialState : {});\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\n_s(GlobalStateProvider, \"Y2UIKnPxX8u8DL2zPx+GCSCSx4c=\");\n_c = GlobalStateProvider;\nconst useGlobalState = () => {\n  _s2();\n  return React.useContext(GlobalState);\n};\n\n// const Store = ({children}) => {\n//     const [state, setState] = useState(initialState);\n\n//     return (\n//         <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n//     );\n// };\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"GlobalStateProvider\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","initialState","todos","id","title","completed","GlobalState","createContext","GlobalStateProvider","children","state","setState","setGlobalState","data","newState","Object","keys","forEach","key","set","useGlobalState","useContext","Store"],"sources":["/Users/artemivliev/Documents/GitHub/DuodekaAssignment/src/Store.js"],"sourcesContent":["import React, {useState, useCallback, useEffect} from 'react'\n\nconst initialState = {\n    todos: [\n        {\n            id: 0,\n            title: \"first\",\n            completed: false\n        }\n    ]\n}\n\n//export const Context = React.createContext();\nexport const GlobalState = React.createContext();\n\nconst GlobalStateProvider = function ({ children }) {\n    const [state, setState] = useState(initialState ?? {});\n  \n    const setGlobalState = useCallback(\n      (data = {}) => {\n        const newState = { ...state };\n  \n        // Loop over the data items by key, only updating those which have changed\n        Object.keys(data).forEach((key) => {\n          newState[key] = data[key];\n        });\n  \n        // Update the state with the new State\n        setState(newState);\n      },\n      [state, setState]\n    );\n  \n    useEffect(() => {\n      GlobalState.set = setGlobalState;\n    }, [setGlobalState]);\n  \n    return (\n      // Pass the current value of GlobalState, based on this components' State, down\n      <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n    );\n  };\n  \n  // Create a shorthand Hook for using the GlobalState\n  const useGlobalState = () => React.useContext(GlobalState);\n\n// const Store = ({children}) => {\n//     const [state, setState] = useState(initialState);\n\n//     return (\n//         <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n//     );\n// };\n\nexport default Store;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAO,OAAO;AAAA;AAE7D,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,CACH;IACIC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACf,CAAC;AAET,CAAC;;AAED;AACA,OAAO,MAAMC,WAAW,gBAAGT,KAAK,CAACU,aAAa,EAAE;AAEhD,MAAMC,mBAAmB,GAAG,gBAAwB;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACG,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,CAAC,CAAC,CAAC;EAEtD,MAAMW,cAAc,GAAGb,WAAW,CAChC,YAAe;IAAA,IAAdc,IAAI,uEAAG,CAAC,CAAC;IACR,MAAMC,QAAQ,GAAG;MAAE,GAAGJ;IAAM,CAAC;;IAE7B;IACAK,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;MACjCJ,QAAQ,CAACI,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAP,QAAQ,CAACG,QAAQ,CAAC;EACpB,CAAC,EACD,CAACJ,KAAK,EAAEC,QAAQ,CAAC,CAClB;EAEDX,SAAS,CAAC,MAAM;IACdM,WAAW,CAACa,GAAG,GAAGP,cAAc;EAClC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEF,KAAM;MAAA,UAAED;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAwB;AAEzE,CAAC;;AAED;AAAA,GA5BID,mBAAmB;AAAA,KAAnBA,mBAAmB;AA6BvB,MAAMY,cAAc,GAAG;EAAA;EAAA,OAAMvB,KAAK,CAACwB,UAAU,CAACf,WAAW,CAAC;AAAA;;AAE5D;AACA;;AAEA;AACA;AACA;AACA;AAAA,IARQc,cAAc;AAUtB,eAAeE,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
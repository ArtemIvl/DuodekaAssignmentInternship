{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AllTodos from './AllTodos';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const {\n    todos\n  } = useGlobalState();\n  const [title, setTitle] = useState([]);\n  var id = 0;\n  const addTodo = () => {\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([...todos, {\n      id: id + 1,\n      title: title,\n      completed: false\n    }]);\n    setTitle('');\n  };\n  const deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    // setTodos(removeArray);\n  };\n\n  const editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text)) {\n      return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(globalStateContext.Provider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: \"TodoApp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addTodo(),\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllTodos, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"QEYeAfVJjWV7XLSULOJ2PyTpaRk=\", true);\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AllTodos","TodoList","todos","useGlobalState","title","setTitle","id","addTodo","GlobalState","set","completed","deleteTodo","removeArray","filter","todo","editTodo","updatedValue","text","test","event","target","value"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport AllTodos from './AllTodos';\nimport './TodoList.css'\n\nfunction TodoList() {\n\nconst { todos } = useGlobalState();\nconst [title, setTitle] = useState([]);\nvar id = 0;\n\nconst addTodo = () => {\n\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([\n        ...todos,\n        {\n            id: id + 1,\n            title: title,\n            completed: false\n        }\n    ]);\n    setTitle(''); \n}\n\nconst deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id)\n   // setTodos(removeArray);\n}\n\nconst editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n    {\n        return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n}\n\n  return (\n    <globalStateContext.Provider>\n    <div className='todo-list'>\n        <div className='header'>TodoApp</div>\n        <input\n        type='text'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        />\n        <button onClick={() => addTodo()}>\n            Add Todo\n        </button>\n        <AllTodos todos={todos} />\n    </div>\n    </globalStateContext.Provider>\n  )\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AAAA;AAEvB,SAASC,QAAQ,GAAG;EAAA;EAEpB,MAAM;IAAEC;EAAM,CAAC,GAAGC,cAAc,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIS,EAAE,GAAG,CAAC;EAEV,MAAMC,OAAO,GAAG,MAAM;IAElB;IACA;IACA;IACA;;IAEAC,WAAW,CAACC,GAAG,CAAC,CACZ,GAAGP,KAAK,EACR;MACII,EAAE,EAAEA,EAAE,GAAG,CAAC;MACVF,KAAK,EAAEA,KAAK;MACZM,SAAS,EAAE;IACf,CAAC,CACJ,CAAC;IACFL,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMM,UAAU,GAAGL,EAAE,IAAI;IACrB,MAAMM,WAAW,GAAG,CAAC,GAAGV,KAAK,CAAC,CAACW,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;IAC9D;EACH,CAAC;;EAED,MAAMS,QAAQ,GAAG,CAACT,EAAE,EAAEU,YAAY,KAAK;IACnC,IAAI,CAACA,YAAY,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,YAAY,CAACC,IAAI,CAAC,EACzD;MACI;IACJ;;IAEA;EACJ,CAAC;;EAEC,oBACE,QAAC,kBAAkB,CAAC,QAAQ;IAAA,uBAC5B;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAK,SAAS,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACrC;QACA,IAAI,EAAC,MAAM;QACX,KAAK,EAAEb,KAAM;QACb,QAAQ,EAAEe,KAAK,IAAId,QAAQ,CAACc,KAAK,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C,eACF;QAAQ,OAAO,EAAE,MAAMd,OAAO,EAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAExB,eACT,QAAC,QAAQ;QAAC,KAAK,EAAEL;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACwB;AAElC;AAAC,GAtDQD,QAAQ;AAAA,KAARA,QAAQ;AAwDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
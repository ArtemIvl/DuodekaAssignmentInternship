{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGlobalState = {\n  todos: [{\n    id: null,\n    title: null,\n    competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = /*#__PURE__*/React.createContext(initialGlobalState);\nconst useGlobalState = () => {\n  _s();\n  return React.useContext(GlobalState);\n};\n_s(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst GlobalStateProvider = function (_ref) {\n  let {\n    children\n  } = _ref;\n} // const [state, setState] = useState(initialGlobalState ?? {});\n\n// const setGlobalState = useCallback(\n//   (data = {}) => {\n//     const newState = { ...state };\n\n//     // Loop over the data items by key, only updating those which have changed\n//     Object.keys(data).forEach((key) => {\n//       newState[key] = data[key];\n//     });\n\n//     // Update the state with the new State\n//     setState(newState);\n//   },\n//   [state, setState]\n// );\n\n// useEffect(() => {\n//   GlobalState.set = setGlobalState;\n// }, [setGlobalState]);\n\n// return (\n//   // Pass the current value of GlobalState, based on this components' State, down\n//   <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n// );\n;\n\n// Create a shorthand Hook for using the GlobalState\n_c = GlobalStateProvider;\nwindow.GlobalState = GlobalState;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(GlobalStateProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStateProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","TodoList","initialGlobalState","todos","id","title","competed","count","GlobalState","createContext","useGlobalState","useContext","GlobalStateProvider","children","window","App"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport TodoList from './components/TodoList';\n\nconst initialGlobalState = {\n  todos: [{\n    id: null, title: null, competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext(initialGlobalState);\n\nconst useGlobalState = () => React.useContext(GlobalState);\n\nconst GlobalStateProvider = function ({ children }) {\n  // const [state, setState] = useState(initialGlobalState ?? {});\n\n  // const setGlobalState = useCallback(\n  //   (data = {}) => {\n  //     const newState = { ...state };\n\n  //     // Loop over the data items by key, only updating those which have changed\n  //     Object.keys(data).forEach((key) => {\n  //       newState[key] = data[key];\n  //     });\n\n  //     // Update the state with the new State\n  //     setState(newState);\n  //   },\n  //   [state, setState]\n  // );\n\n  // useEffect(() => {\n  //   GlobalState.set = setGlobalState;\n  // }, [setGlobalState]);\n\n  // return (\n  //   // Pass the current value of GlobalState, based on this components' State, down\n  //   <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n  // );\n};\n\n// Create a shorthand Hook for using the GlobalState\nwindow.GlobalState = GlobalState;\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;IACNC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE;EACnC,CAAC,CAAC;EACFC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAa,CAACP,kBAAkB,CAAC;AAE3D,MAAMQ,cAAc,GAAG;EAAA;EAAA,OAAMb,KAAK,CAACc,UAAU,CAACH,WAAW,CAAC;AAAA;AAAC,GAArDE,cAAc;AAEpB,MAAME,mBAAmB,GAAG,gBAAwB;EAAA,IAAd;IAAEC;EAAS,CAAC;AA0BlD,CAAC,CAzBC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACD;;AAED;AAAA,KA5BMD,mBAAmB;AA6BzBE,MAAM,CAACN,WAAW,GAAGA,WAAW;AAEhC,SAASO,GAAG,GAAG;EACb,oBACE,QAAC,mBAAmB;IAAA,uBACpB;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACgB;AAE1B;AAAC,MARQA,GAAG;AAUZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
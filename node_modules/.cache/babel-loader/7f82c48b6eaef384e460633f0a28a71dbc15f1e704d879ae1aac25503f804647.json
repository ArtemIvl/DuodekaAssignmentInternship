{"ast":null,"code":"// import React, {useState, useEffect, useCallback, useContext} from 'react'\n// import AllTodos from './AllTodos';\n// import App from '../App';\n// import './TodoList.css'\n// import { Context } from '../Store';\n\n// const TodoList = () => {\n\n// const {state, setState} = useContext(Context);\n// const [title, setTitle] = useState(\"\");\n// var id = 0;\n\n// // const addTodo = () => {\n\n// //     // if (title || /^\\s*$/.test(title))\n// //     // {\n// //     //     return;\n// //     // }\n\n// //     setState(state.todos, {\n// //         id: id,\n// //         title: title,\n// //         complete: false\n// //     })\n// //     setTitle(''); \n// // }\n\n// const deleteTodo = id => {\n//    // const removeArray = [...todos].filter(todo => todo.id !== id)\n//    // setTodos(removeArray);\n// }\n\n// const editTodo = (id, updatedValue) => {\n//     if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n//     {\n//         return;\n//     }\n\n//     //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n// }\n\n//   return (\n//     <div className='todo-list'>\n//         <div className='header'>TodoApp</div>\n//         <input\n//         type='text'\n//         value={title}\n//         onChange={event => setTitle(event.target.value)}\n//         />\n//         <button>\n//             Add Todo\n//         </button>\n//         <h1>{state.name}</h1>\n//         <h2>{state.email}</h2>\n//     </div>\n//   )\n// }\n\n// export default TodoList;\nimport React, { useState, useEffect, useCallback, useContext } from 'react';\nimport AllTodos from './AllTodos';\nimport App from '../App';\nimport './TodoList.css';\nimport { Context } from '../Store';","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","AllTodos","App","Context"],"sources":["/Users/artemivliev/Documents/GitHub/DuodekaAssignment/src/components/TodoList.js"],"sourcesContent":["// import React, {useState, useEffect, useCallback, useContext} from 'react'\n// import AllTodos from './AllTodos';\n// import App from '../App';\n// import './TodoList.css'\n// import { Context } from '../Store';\n\n// const TodoList = () => {\n\n// const {state, setState} = useContext(Context);\n// const [title, setTitle] = useState(\"\");\n// var id = 0;\n\n// // const addTodo = () => {\n\n// //     // if (title || /^\\s*$/.test(title))\n// //     // {\n// //     //     return;\n// //     // }\n\n// //     setState(state.todos, {\n// //         id: id,\n// //         title: title,\n// //         complete: false\n// //     })\n// //     setTitle(''); \n// // }\n\n// const deleteTodo = id => {\n//    // const removeArray = [...todos].filter(todo => todo.id !== id)\n//    // setTodos(removeArray);\n// }\n\n// const editTodo = (id, updatedValue) => {\n//     if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n//     {\n//         return;\n//     }\n\n//     //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n// }\n\n//   return (\n//     <div className='todo-list'>\n//         <div className='header'>TodoApp</div>\n//         <input\n//         type='text'\n//         value={title}\n//         onChange={event => setTitle(event.target.value)}\n//         />\n//         <button>\n//             Add Todo\n//         </button>\n//         <h1>{state.name}</h1>\n//         <h2>{state.email}</h2>\n//     </div>\n//   )\n// }\n\n// export default TodoList;\nimport React, {useState, useEffect, useCallback, useContext} from 'react'\nimport AllTodos from './AllTodos';\nimport App from '../App';\nimport './TodoList.css'\nimport { Context } from '../Store';"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAO,OAAO;AACzE,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,gBAAgB;AACvB,SAASC,OAAO,QAAQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport AllTodos from './AllTodos';\nimport App from '../App';\nimport './TodoList.css';\n\n//const GlobalState = React.createContext();\n//const useGlobalState = () => React.useContext(GlobalState);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  const {\n    count\n  } = useGlobalState();\n  const [title, setTitle] = useState([]);\n  var id = 0;\n  function addTodo() {\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([...todos, {\n      id: id + 1,\n      title: title,\n      completed: false\n    }]);\n    setTitle('');\n  }\n  const deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    // setTodos(removeArray);\n  };\n\n  const editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text)) {\n      return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"TodoApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: event => setTitle(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addTodo(),\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AllTodos, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"B1YR7/rKCXOWHuJadt/uMMJQ6B0=\", true);\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AllTodos","App","TodoList","count","useGlobalState","title","setTitle","id","addTodo","GlobalState","set","todos","completed","deleteTodo","removeArray","filter","todo","editTodo","updatedValue","text","test","event","target","value"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/components/TodoList.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport AllTodos from './AllTodos';\nimport App from '../App';\nimport './TodoList.css'\n\n//const GlobalState = React.createContext();\n//const useGlobalState = () => React.useContext(GlobalState);\n\nfunction TodoList() {\n\nconst { count } = useGlobalState();\nconst [title, setTitle] = useState([]);\nvar id = 0;\n\nfunction addTodo() {\n\n    // if (title || /^\\s*$/.test(title))\n    // {\n    //     return;\n    // }\n\n    GlobalState.set([\n        ...todos,\n        {\n            id: id + 1,\n            title: title,\n            completed: false\n        }\n    ]);\n    setTitle(''); \n}\n\nconst deleteTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id)\n   // setTodos(removeArray);\n}\n\nconst editTodo = (id, updatedValue) => {\n    if (!updatedValue.text || /^\\s*$/.test(updatedValue.text))\n    {\n        return;\n    }\n\n    //setTodos(prev => prev.map(item => (item.id === id ? updatedValue : item)));\n}\n\n  return (\n    <div className='todo-list'>\n        <div className='header'>TodoApp</div>\n        <input\n        type='text'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        />\n        <button onClick={() => addTodo()}>\n            Add Todo\n        </button>\n        <AllTodos todos={todos} />\n    </div>\n  )\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,gBAAgB;;AAEvB;AACA;AAAA;AAEA,SAASC,QAAQ,GAAG;EAAA;EAEpB,MAAM;IAAEC;EAAM,CAAC,GAAGC,cAAc,EAAE;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,IAAIU,EAAE,GAAG,CAAC;EAEV,SAASC,OAAO,GAAG;IAEf;IACA;IACA;IACA;;IAEAC,WAAW,CAACC,GAAG,CAAC,CACZ,GAAGC,KAAK,EACR;MACIJ,EAAE,EAAEA,EAAE,GAAG,CAAC;MACVF,KAAK,EAAEA,KAAK;MACZO,SAAS,EAAE;IACf,CAAC,CACJ,CAAC;IACFN,QAAQ,CAAC,EAAE,CAAC;EAChB;EAEA,MAAMO,UAAU,GAAGN,EAAE,IAAI;IACrB,MAAMO,WAAW,GAAG,CAAC,GAAGH,KAAK,CAAC,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACT,EAAE,KAAKA,EAAE,CAAC;IAC9D;EACH,CAAC;;EAED,MAAMU,QAAQ,GAAG,CAACV,EAAE,EAAEW,YAAY,KAAK;IACnC,IAAI,CAACA,YAAY,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,YAAY,CAACC,IAAI,CAAC,EACzD;MACI;IACJ;;IAEA;EACJ,CAAC;;EAEC,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACtB;MAAK,SAAS,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACrC;MACA,IAAI,EAAC,MAAM;MACX,KAAK,EAAEd,KAAM;MACb,QAAQ,EAAEgB,KAAK,IAAIf,QAAQ,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC9C,eACF;MAAQ,OAAO,EAAE,MAAMf,OAAO,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAExB,eACT,QAAC,QAAQ;MAAC,KAAK,EAAEG;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,GApDQT,QAAQ;AAAA,KAARA,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
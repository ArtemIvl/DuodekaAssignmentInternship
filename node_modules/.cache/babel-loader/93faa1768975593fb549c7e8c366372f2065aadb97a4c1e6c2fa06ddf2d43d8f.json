{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGlobalState = {\n  todos: [{\n    id: null,\n    title: null,\n    competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = /*#__PURE__*/React.createContext(initialGlobalState);\nconst globalStateContext = /*#__PURE__*/React.createContext(initialGlobalState);\nconst dispatchStateContext = /*#__PURE__*/React.createContext(undefined);\nconst useGlobalState = () => {\n  _s();\n  return React.useContext(GlobalState);\n};\n_s(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst GlobalStateProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = React.useReducer((state, newValue) => ({\n    ...state,\n    ...newValue\n  }), defaultGlobalState);\n  return /*#__PURE__*/_jsxDEV(globalStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(dispatchStateContext.Provider, {\n      value: dispatch,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\n_s2(GlobalStateProvider, \"TunzuWCUVpUG5Ia095sZmiRlXhw=\");\n_c = GlobalStateProvider;\nwindow.GlobalState = GlobalState;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(GlobalStateProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStateProvider\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","TodoList","initialGlobalState","todos","id","title","competed","count","GlobalState","createContext","globalStateContext","dispatchStateContext","undefined","useGlobalState","useContext","GlobalStateProvider","children","state","dispatch","useReducer","newValue","defaultGlobalState","setGlobalState","data","newState","Object","keys","forEach","key","setState","set","window","App"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect, useCallback} from 'react';\nimport TodoList from './components/TodoList';\n\nconst initialGlobalState = {\n  todos: [{\n    id: null, title: null, competed: false\n  }],\n  count: 1\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext(initialGlobalState);\n\nconst globalStateContext = React.createContext(initialGlobalState);\nconst dispatchStateContext = React.createContext(undefined);\n\nconst useGlobalState = () => React.useContext(GlobalState);\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(\n    (state, newValue) => ({ ...state, ...newValue }),\n    defaultGlobalState\n  );\n\n  return (\n    <globalStateContext.Provider value={state}>\n      <dispatchStateContext.Provider value={dispatch}>\n        {children}\n      </dispatchStateContext.Provider>\n    </globalStateContext.Provider>\n  );\n\n  const setGlobalState = useCallback(\n    (data = {}) => {\n      const newState = { ...state };\n\n      // Loop over the data items by key, only updating those which have changed\n      Object.keys(data).forEach((key) => {\n        newState[key] = data[key];\n      });\n\n      // Update the state with the new State\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n\n  return (\n    // Pass the current value of GlobalState, based on this components' State, down\n    <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\nwindow.GlobalState = GlobalState;\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;IACNC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE;EACnC,CAAC,CAAC;EACFC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,gBAAGX,KAAK,CAACY,aAAa,CAACP,kBAAkB,CAAC;AAE3D,MAAMQ,kBAAkB,gBAAGb,KAAK,CAACY,aAAa,CAACP,kBAAkB,CAAC;AAClE,MAAMS,oBAAoB,gBAAGd,KAAK,CAACY,aAAa,CAACG,SAAS,CAAC;AAE3D,MAAMC,cAAc,GAAG;EAAA;EAAA,OAAMhB,KAAK,CAACiB,UAAU,CAACN,WAAW,CAAC;AAAA;AAAC,GAArDK,cAAc;AAEpB,MAAME,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,KAAK,CAACsB,UAAU,CACxC,CAACF,KAAK,EAAEG,QAAQ,MAAM;IAAE,GAAGH,KAAK;IAAE,GAAGG;EAAS,CAAC,CAAC,EAChDC,kBAAkB,CACnB;EAED,oBACE,QAAC,kBAAkB,CAAC,QAAQ;IAAC,KAAK,EAAEJ,KAAM;IAAA,uBACxC,QAAC,oBAAoB,CAAC,QAAQ;MAAC,KAAK,EAAEC,QAAS;MAAA,UAC5CF;IAAQ;MAAA;MAAA;MAAA;IAAA;EACqB;IAAA;IAAA;IAAA;EAAA,QACJ;EAGhC,MAAMM,cAAc,GAAGtB,WAAW,CAChC,YAAe;IAAA,IAAduB,IAAI,uEAAG,CAAC,CAAC;IACR,MAAMC,QAAQ,GAAG;MAAE,GAAGP;IAAM,CAAC;;IAE7B;IACAQ,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;MACjCJ,QAAQ,CAACI,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAC,QAAQ,CAACL,QAAQ,CAAC;EACpB,CAAC,EACD,CAACP,KAAK,EAAEY,QAAQ,CAAC,CAClB;EAED9B,SAAS,CAAC,MAAM;IACdS,WAAW,CAACsB,GAAG,GAAGR,cAAc;EAClC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEL,KAAM;MAAA,UAAED;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAwB;AAEzE,CAAC;;AAED;AAAA,IAvCMD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAwCzBgB,MAAM,CAACvB,WAAW,GAAGA,WAAW;AAEhC,SAASwB,GAAG,GAAG;EACb,oBACE,QAAC,mBAAmB;IAAA,uBACpB;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACgB;AAE1B;AAAC,MARQA,GAAG;AAUZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
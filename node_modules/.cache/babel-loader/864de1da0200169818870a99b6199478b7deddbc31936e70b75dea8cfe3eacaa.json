{"ast":null,"code":"var _jsxFileName = \"/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGlobalState = {\n  todos: [{\n    id: null,\n    title: null,\n    competed: false\n  }]\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext();\nconst GlobalStateProvider = function (_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState(initialGlobalState !== null && initialGlobalState !== void 0 ? initialGlobalState : {});\n  const setGlobalState = useCallback(function () {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const newState = {\n      ...state\n    };\n\n    // Loop over the data items by key, only updating those which have changed\n    Object.keys(data).forEach(key => {\n      newState[key] = data[key];\n    });\n\n    // Update the state with the new State\n    setState(newState);\n  }, [state, setState]);\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n  return (\n    /*#__PURE__*/\n    // Pass the current value of GlobalState, based on this components' State, down\n    _jsxDEV(GlobalState.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\n_s(GlobalStateProvider, \"vsN1OYyNhdtEbC3EgeiArcWWJPg=\");\n_c = GlobalStateProvider;\nconst useGlobalState = () => {\n  _s2();\n  return React.useContext(GlobalState);\n};\n\n// Create an example component which both renders and modifies the GlobalState\n_s2(useGlobalState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction SomeComponent() {\n  _s3();\n  const {\n    count\n  } = useGlobalState();\n\n  // Create a function which mutates GlobalState\n  function incrementCount() {\n    GlobalState.set({\n      count: count + 1\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: incrementCount,\n    children: count\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_s3(SomeComponent, \"02SLJFtzEZ9vzDehoAWUNODzUJo=\", false, function () {\n  return [useGlobalState];\n});\n_c2 = SomeComponent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GlobalStateProvider\");\n$RefreshReg$(_c2, \"SomeComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["TodoList","initialGlobalState","todos","id","title","competed","GlobalState","React","createContext","GlobalStateProvider","children","state","setState","useState","setGlobalState","useCallback","data","newState","Object","keys","forEach","key","useEffect","set","useGlobalState","useContext","SomeComponent","count","incrementCount","App"],"sources":["/Users/artemivliev/Artem/Internship assignment Duodeka/todoapp/src/App.js"],"sourcesContent":["import './App.css';\nimport TodoList from './components/TodoList';\n\nconst initialGlobalState = {\n  todos: [{\n    id: null, title: null, competed: false\n  }]\n};\n\n// Create a Context for the (global) State\nconst GlobalState = React.createContext();\n\nconst GlobalStateProvider = function ({ children }) {\n  const [state, setState] = useState(initialGlobalState ?? {});\n\n  const setGlobalState = useCallback(\n    (data = {}) => {\n      const newState = { ...state };\n\n      // Loop over the data items by key, only updating those which have changed\n      Object.keys(data).forEach((key) => {\n        newState[key] = data[key];\n      });\n\n      // Update the state with the new State\n      setState(newState);\n    },\n    [state, setState]\n  );\n\n  useEffect(() => {\n    GlobalState.set = setGlobalState;\n  }, [setGlobalState]);\n\n  return (\n    // Pass the current value of GlobalState, based on this components' State, down\n    <GlobalState.Provider value={state}>{children}</GlobalState.Provider>\n  );\n};\n\n// Create a shorthand Hook for using the GlobalState\nconst useGlobalState = () => React.useContext(GlobalState);\n\n// Create an example component which both renders and modifies the GlobalState\nfunction SomeComponent() {\n  const { count } = useGlobalState();\n\n  // Create a function which mutates GlobalState\n  function incrementCount() {\n    GlobalState.set({\n      count: count + 1\n    });\n  }\n\n  return <div onClick={incrementCount}>{count}</div>;\n}\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,MAAMC,kBAAkB,GAAG;EACzBC,KAAK,EAAE,CAAC;IACNC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,IAAI;IAAEC,QAAQ,EAAE;EACnC,CAAC;AACH,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,aAAa,EAAE;AAEzC,MAAMC,mBAAmB,GAAG,gBAAwB;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAACZ,kBAAkB,aAAlBA,kBAAkB,cAAlBA,kBAAkB,GAAI,CAAC,CAAC,CAAC;EAE5D,MAAMa,cAAc,GAAGC,WAAW,CAChC,YAAe;IAAA,IAAdC,IAAI,uEAAG,CAAC,CAAC;IACR,MAAMC,QAAQ,GAAG;MAAE,GAAGN;IAAM,CAAC;;IAE7B;IACAO,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAAEC,GAAG,IAAK;MACjCJ,QAAQ,CAACI,GAAG,CAAC,GAAGL,IAAI,CAACK,GAAG,CAAC;IAC3B,CAAC,CAAC;;IAEF;IACAT,QAAQ,CAACK,QAAQ,CAAC;EACpB,CAAC,EACD,CAACN,KAAK,EAAEC,QAAQ,CAAC,CAClB;EAEDU,SAAS,CAAC,MAAM;IACdhB,WAAW,CAACiB,GAAG,GAAGT,cAAc;EAClC,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB;IAAA;IACE;IACA,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEH,KAAM;MAAA,UAAED;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAwB;AAEzE,CAAC;;AAED;AAAA,GA5BMD,mBAAmB;AAAA,KAAnBA,mBAAmB;AA6BzB,MAAMe,cAAc,GAAG;EAAA;EAAA,OAAMjB,KAAK,CAACkB,UAAU,CAACnB,WAAW,CAAC;AAAA;;AAE1D;AAAA,IAFMkB,cAAc;AAGpB,SAASE,aAAa,GAAG;EAAA;EACvB,MAAM;IAAEC;EAAM,CAAC,GAAGH,cAAc,EAAE;;EAElC;EACA,SAASI,cAAc,GAAG;IACxBtB,WAAW,CAACiB,GAAG,CAAC;MACdI,KAAK,EAAEA,KAAK,GAAG;IACjB,CAAC,CAAC;EACJ;EAEA,oBAAO;IAAK,OAAO,EAAEC,cAAe;IAAA,UAAED;EAAK;IAAA;IAAA;IAAA;EAAA,QAAO;AACpD;AAAC,IAXQD,aAAa;EAAA,QACFF,cAAc;AAAA;AAAA,MADzBE,aAAa;AAYtB,SAASG,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,uBACvB,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACR;AAEV;AAAC,MANQA,GAAG;AAQZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}